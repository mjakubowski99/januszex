Na początku w pliku public/.htaccess należy sprawdzić linijkę

RewriteBase /

Może się ona różnić w zależności od tego poprzez jaki url otwieramy aplikację.
Jeśli robimy to przez xamppa, możemy otwierać nasz plik index.php poprzez 

localhost/myapp/public

Wtedy linijka RewriteBase wyglądałaby tak

RewriteBase /localhost/myapp/public



1. Każdy request jest realizowany poprzez public/index.php

2. W pliku index.php jest tworzona nowa instancja aplikacji

3. W klasie App podany przez nas url jest parsowany

4. Tworzona jest nowa instancja klasy Routes, w klasie Routes definiujemy jakie metody 
controllera mają być wywoływane po wpisaniu danej frazy. Klasa ta w swoim konstruktorze 
tworzy instancje klasy Router i wywołuje jej metodę add, która pozwala właśnie na zapisanie
tych zdefiniowanych routów do tablicy routingu.

5. Gdy routy zostały dodane, są pobierane z instancji klasy Routes

6. Dalej router dopasowuje podaną przez klienta nazwę i sprawdza czy pasuje do którejś
ze zdefiniowanych w tablicy routingu, przy okazji sprawdza czy metoda HTTP klienta
zgadza się z tą zdefiniowaną.

7. Jeżeli się zgadza to zostaje wywoływana metoda kontrolera, która wykonuje swoje akcje
na danych, dokonuje wstępnej obróki, wykonuje akcje na bazie danych itp. i na sam koniec
wyświetla nam widok, do którego mogą być przekazane jakieś dane.


Uwagi:

    1.Jeśli chcemy uzyskać połączenie z bazą to wymagamy klasy:

        require_once '../app/database/DatabaseConnector.php;

            $db_conn = new DatabaseConnector();
        
        Jeśli chcemy uzyskać połącznie:

            $connection = $db_conn->getConnection();

    2.Można też skorzystać z klasy Database, która ma przygotowane metody, które 
      wykonują zapytania execute i insert



    2.Każdą informację o błędzie zwracamy poprzez json_encode, przykład

        echo json_encode([
            'message' => $error_message
        ]);

        Piszemy api na backendzie, więc powinien być zwracany json, nawet jeśli to błąd, 
        zeby wszystko było spójne.
